<?php

/* This file is generated by the open source Parm Generator. github.com/cassell/Parm */

    namespace app\models;

class MUserDaoObject extends \Parm\DataAccessObject implements MUserTable
{
    use MUserTableFunctions;

        /**
        * Set int(11) field m_user.id in logical database "mvc"
        * @param string|int|null $val
        */
        final function setId($val) { $this->setIntFieldValue(self::ID_COLUMN,$val); }

        /**
        * Get int(11) field m_user.id from logical database "mvc"
        * @return int|null
        */
        final function getId(){ return $this->getIntFieldValue(self::ID_COLUMN); }

        /**
        * Set varchar(255) field m_user.login in logical database "mvc"
        * @param string|null $val
        */
        final function setLogin($val) { $this->setFieldValue(self::LOGIN_COLUMN,$val); }

        /**
        * Get varchar(255) field m_user.login from logical database "mvc"
        * @return string|null
        */
        final function getLogin(){ return $this->getFieldValue(self::LOGIN_COLUMN); }

        /**
        * Set varchar(255) field m_user.name in logical database "mvc"
        * @param string|null $val
        */
        final function setName($val) { $this->setFieldValue(self::NAME_COLUMN,$val); }

        /**
        * Get varchar(255) field m_user.name from logical database "mvc"
        * @return string|null
        */
        final function getName(){ return $this->getFieldValue(self::NAME_COLUMN); }

        /**
        * Set varchar(255) field m_user.avatar in logical database "mvc"
        * @param string|null $val
        */
        final function setAvatar($val) { $this->setFieldValue(self::AVATAR_COLUMN,$val); }

        /**
        * Get varchar(255) field m_user.avatar from logical database "mvc"
        * @return string|null
        */
        final function getAvatar(){ return $this->getFieldValue(self::AVATAR_COLUMN); }

        /**
        * Set varchar(255) field m_user.password in logical database "mvc"
        * @param string|null $val
        */
        final function setPassword($val) { $this->setFieldValue(self::PASSWORD_COLUMN,$val); }

        /**
        * Get varchar(255) field m_user.password from logical database "mvc"
        * @return string|null
        */
        final function getPassword(){ return $this->getFieldValue(self::PASSWORD_COLUMN); }


}
